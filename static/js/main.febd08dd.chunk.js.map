{"version":3,"sources":["components/CountdownTimer.jsx","components/Main.jsx","components/Order.jsx","App.js","reportWebVitals.js","index.js"],"names":["CountdownTimer","useState","setSeconds","hoursRef","useRef","minutesRef","secondsRef","startTimer","useCallback","current","cogoToast","success","useEffect","intervalId","setInterval","clearTimeout","className","padStart","split","map","item","index","Main","navigate","useNavigate","onClick","countdownTimestampMs","Order","window","location","assign","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAyDeA,EAtDQ,WACnB,MAAuBC,qBAAdC,EAAT,oBACMC,EAAWC,iBAAO,IAClBC,EAAaD,iBAAO,GACpBE,EAAaF,iBAAO,GACpBG,EAAaC,uBAAY,WACvBF,EAAWG,SAAYJ,EAAWI,SAAYN,EAASM,SAIjC,IAAvBH,EAAWG,SAAwC,IAAvBJ,EAAWI,SACtCN,EAASM,SAAW,EACpBJ,EAAWI,QAAU,GACrBH,EAAWG,QAAU,IAEO,IAAvBH,EAAWG,QAChBH,EAAWG,SAAW,GAEtBJ,EAAWI,SAAW,EACtBH,EAAWG,QAAU,IAEzBP,EAAWI,EAAWG,UAdlBC,IAAUC,QAAQ,mBAevB,IAKH,OAJAC,qBAAU,WACN,IAAMC,EAAaC,YAAYP,EAAY,KAC3C,OAAM,kBAAMQ,aAAaF,MAC3B,CAACN,IAEH,sBAAKS,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SACK,UAAGb,EAASM,SAAUQ,SAAS,EAAE,GAAGC,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAAiB,qBAAiBL,UAAU,kBAA3B,SAA8CI,GAApCC,QAElF,sBAAML,UAAU,aAAhB,wBAEJ,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SACK,UAAGX,EAAWI,SAAUQ,SAAS,EAAE,GAAGC,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAAiB,qBAAiBL,UAAU,oBAA3B,SAAgDI,GAAtCC,QAEpF,sBAAML,UAAU,aAAhB,yBAGR,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SACK,UAAGV,EAAWG,SAAUQ,SAAS,EAAE,GAAGC,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAAiB,qBAAiBL,UAAU,oBAA3B,SAAgDI,GAAtCC,QAEpF,sBAAML,UAAU,aAAhB,8BCtBDM,EA1BF,WACT,IAAMC,EAAWC,cAIjB,OACI,sBAAKR,UAAU,YAAf,UACA,oBAAIA,UAAU,WAAd,uBACA,mBAAGA,UAAU,OAAb,wCACA,qBAAKA,UAAU,QAAf,uBAGA,mBAAGA,UAAU,MAAb,sCACA,sBAAKA,UAAU,MAAf,UACA,wBAAQS,QAZI,WACdF,EAAS,WAWmBP,UAAU,SAApC,6BAGA,qBAAKA,UAAU,QAAf,iDACA,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAcU,qBAAsB,sBCT/BC,EAbD,WAIV,OACI,sBAAKX,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,sCACA,wBAAQS,QANG,WACfG,OAAOC,SAASC,OAAO,4BAKUd,UAAU,SAAvC,sCCQGe,MAXf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.febd08dd.chunk.js","sourcesContent":["import cogoToast from \"cogo-toast\";\r\nimport {useCallback, useEffect, useRef, useState} from \"react\";\r\n\r\nconst CountdownTimer = () => {\r\n    const [, setSeconds] = useState();\r\n    const hoursRef = useRef(72);\r\n    const minutesRef = useRef(0);\r\n    const secondsRef = useRef(0);\r\n    const startTimer = useCallback(() => {\r\n        if(!secondsRef.current && !minutesRef.current && !hoursRef.current) {\r\n            cogoToast.success(\"Time complete\")\r\n            return;\r\n        }\r\n        if(secondsRef.current === 0 && minutesRef.current === 0) {\r\n            hoursRef.current -= 1;\r\n            minutesRef.current = 59;\r\n            secondsRef.current = 59;\r\n        }\r\n        else if (secondsRef.current !== 0) {\r\n            secondsRef.current -= 1;\r\n        } else {\r\n            minutesRef.current -= 1;\r\n            secondsRef.current = 59;\r\n        }\r\n        setSeconds(secondsRef.current);\r\n    }, [ ]);\r\n    useEffect(() => {\r\n        const intervalId = setInterval(startTimer, 1000);\r\n        return() => clearTimeout(intervalId)\r\n    },[startTimer]);\r\n    return(\r\n    <div className=\"countdown-timer\">\r\n        <div className=\"count-outer\">\r\n            <div className=\"count-inner\">\r\n                {`${hoursRef.current}`.padStart(2,0).split('').map((item, index) => <div key={index} className=\"unit hour--unit\">{item}</div>)}\r\n            </div>\r\n            <span className=\"unit--desc\">Godziny</span>\r\n        </div>\r\n        <div className=\"count\">\r\n            <div className=\"count-outer\">\r\n                <div className=\"count-inner\">\r\n                    {`${minutesRef.current}`.padStart(2,0).split('').map((item, index) => <div key={index} className=\"unit minute--unit\">{item}</div>)}\r\n                </div>\r\n                <span className=\"unit--desc\">Minuty</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"count\">\r\n            <div className=\"count-outer\">\r\n                <div className=\"count-inner\">\r\n                    {`${secondsRef.current}`.padStart(2,0).split('').map((item, index) => <div key={index} className=\"unit second--unit\">{item}</div>)}\r\n                </div>\r\n                <span className=\"unit--desc\">Sekundy</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default CountdownTimer;","import { useNavigate } from 'react-router-dom';\r\nimport Countertimer from \"./CountdownTimer\";\r\n\r\nconst Main = () => {\r\n    const navigate = useNavigate();\r\n    const onOrder = () => {\r\n      navigate('/order');\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <h2 className=\"heading2\">Promocja!</h2>\r\n        <p className=\"wait\">Nie zwlekaj i zyskaj Rabat</p>\r\n        <div className=\"label\">\r\n            nawet 40%\r\n        </div>\r\n        <p className=\"buy\">na kolejne zamówienie</p>\r\n        <div className=\"box\">\r\n        <button onClick={onOrder} className=\"action\">\r\n        ZAMOW JUZ TERAZ\r\n        </button>\r\n        <div className=\"timer\">DO KOŃCA AKCJI POZOSTAŁO </div>\r\n        <div className=\"countdown\">\r\n          <Countertimer countdownTimestampMs={1643673600000}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Main;","const Order = () => {\r\n    const onComplete = () => {\r\n        window.location.assign('https://salesrobots.pl/');\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"buy\">TO JUŻ OSTATNI KROK</div>\r\n            <button onClick={onComplete} className=\"action\">\r\n                TO JUST OSTATNI KROK\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Order;","import { Route, Routes } from \"react-router-dom\";\nimport './App.css';\nimport Main from './components/Main';\nimport Order from \"./components/Order\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/order\" element={<Order />} />\n        <Route path=\"/\" element={<Main />} />\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}